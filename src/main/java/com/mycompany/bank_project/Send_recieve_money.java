/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.bank_project;

import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;

/**
 *
 * @author Krish
 */
public class Send_recieve_money extends javax.swing.JFrame {

   
    int accountnumber;
     public Send_recieve_money(int accountnumber) {
        this();
        this.accountnumber = accountnumber;
    }
    public Send_recieve_money() {
        initComponents();
        sendMoney.setVisible(false);
        password.setVisible(false);
        password1.setVisible(false);
        amount.setVisible(false);
        amount1.setVisible(false);
        txt.setVisible(false);
        confirm2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        confirm2 = new javax.swing.JButton();
        password1 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        sendMoney = new javax.swing.JButton();
        amount1 = new javax.swing.JLabel();
        amount = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        receiveraccountnumber = new javax.swing.JTextField();
        confirm1 = new javax.swing.JButton();
        txt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 800));
        setPreferredSize(new java.awt.Dimension(800, 800));

        confirm2.setText("CONFIRM");
        confirm2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirm2ActionPerformed(evt);
            }
        });

        password1.setText("PASSWORD");

        sendMoney.setText("SEND MONEY");
        sendMoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMoneyActionPerformed(evt);
            }
        });

        amount1.setText("AMOUNT");

        jLabel3.setText("RECIEVER'S ACCOUNT NUMBER");

        confirm1.setText("CONFIRM");
        confirm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirm1ActionPerformed(evt);
            }
        });

        txt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt.setForeground(new java.awt.Color(255, 51, 0));
        txt.setText("AMOUNT SHOULD BE GREATER THAN 100 AND IN MULTIPLES OF 100");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 82, Short.MAX_VALUE)
                .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sendMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirm1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(receiveraccountnumber, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(password1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(amount1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(confirm2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(receiveraccountnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(confirm1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amount1)
                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(txt)
                .addGap(18, 18, 18)
                .addComponent(confirm2)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password1)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(sendMoney)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirm2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirm2ActionPerformed
        // TODO add your handling code here:
        /*
          if(receiveraccountnumber.getText() == null || receiveraccountnumber.getText().trim().equals("")){
            receiveraccountnumber.setBorder(new LineBorder(Color.RED,2));
            return;
        }
        else{
            receiveraccountnumber.setBorder(null);
            
        }
        */
        
         if(amount.getText().trim().matches("^[0-9]+$") ){
        
        
         amount.setBorder(null);
            
        }
        else {
             amount.setBorder(new LineBorder(Color.RED , 2));
            return;
         }
        
         if (Float.valueOf(amount.getText()) > 100 && Float.valueOf(amount.getText()) % 100 == 0) {
    
         System.out.println("Amount is valid. Proceeding with transaction...");
           JOptionPane.showMessageDialog(this, "Amount is valid. Proceeding with transaction...");
           
             try {
                 Thread.sleep(3000);
             } catch (InterruptedException ex) {
                 Logger.getLogger(Send_recieve_money.class.getName()).log(Level.SEVERE, null, ex);
             }
             
             sendMoney.setVisible(true);
              password.setVisible(true);
              password1.setVisible(true);
              
              sendMoneyActionPerformed(evt);
             
         
         } 
         else {
            amount.setBorder(new LineBorder(Color.RED , 2));
            JOptionPane.showMessageDialog(this, "ENTER VALID AMOUNT");
            return;
          
         }

         
         
         
         
         
    }//GEN-LAST:event_confirm2ActionPerformed

    private void confirm1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirm1ActionPerformed
        // TODO add your handling code here:
        
        if(receiveraccountnumber.getText() == null || receiveraccountnumber.getText().trim().equals("")){
            receiveraccountnumber.setBorder(new LineBorder(Color.RED,2));
            return;
        }
        else{
            receiveraccountnumber.setBorder(null);
            
        }
        
         
        try {
           boolean  result =
                   DataBase.checkAccount(Integer.valueOf(receiveraccountnumber.getText()));
           
         if (result ){
             JOptionPane.showMessageDialog(this, "ACCOUNT FOUND");
               amount.setVisible(true);
               amount1.setVisible(true);
               confirm2.setVisible(true);
               txt.setVisible(true);
               
               confirm2ActionPerformed(evt);
            }
           else{
               JOptionPane.showMessageDialog(this, "THIS ACCOUNT DOES NOT EXIST IN OUR BANK");
           }
           
           
        } catch (Exception ex) {
             ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "SOMETHING WENT WRONG");
        }
            
        
         if(amount.getText().trim().matches("^[0-9]+$"))
        {
        System.out.println(amount.getText());
        
         amount.setBorder(null);
            
        }
        else {
             amount.setBorder(new LineBorder(Color.RED , 2));
            return;
         }
        
        
        
    }//GEN-LAST:event_confirm1ActionPerformed

    private void sendMoneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMoneyActionPerformed
        // TODO add your handling code here:
        
         if(password.getText() == null || password.getText().trim().equals("")){
            password.setBorder(new LineBorder(Color.RED,2));
            return;
        }
        else{
            password.setBorder(null);
            
        }
         
         try {
           
            boolean result =  DataBase.checkPassword(accountnumber, password.getText());
            if (result ){
             
            boolean result2 = DataBase.checkAmount(accountnumber, Float.valueOf(amount.getText()));
               if (result2){
                   
                  boolean result3 = DataBase.sendMoney(accountnumber, Integer.valueOf(receiveraccountnumber.getText()),Float.valueOf(amount.getText()));
                   if(result3){
                       
                       JOptionPane.showMessageDialog(this, "MONEY SENT SUCCESSFULLY");
                       
                        this.setVisible(false);
                        new Features().setVisible(true);
                   }
                   else{
                       JOptionPane.showMessageDialog(this, "COULDN'T SEND MONEY. IF MONEY IS DEDUCTED, IT WILL SONN BE REFUNDED");
                   }
               }
               else{
                   
                   JOptionPane.showMessageDialog(this, "ENTERED AMOUNT EXCEEDS YOUR CURRENT BALANCE. ENTER VALID AMOUNT.");
                   
               }  
                 
            }
            
            else{
                JOptionPane.showMessageDialog(this, "WRONG PASSWORD, PLEASE TRY AGAIN");
                
            }
        } 
         catch (Exception ex) {
            
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "SOMETHING WENT WRONG");
        }
        
        
        
        
        
    }//GEN-LAST:event_sendMoneyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Send_recieve_money.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Send_recieve_money.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Send_recieve_money.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Send_recieve_money.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Send_recieve_money().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amount;
    private javax.swing.JLabel amount1;
    private javax.swing.JButton confirm1;
    private javax.swing.JButton confirm2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField password;
    private javax.swing.JLabel password1;
    private javax.swing.JTextField receiveraccountnumber;
    private javax.swing.JButton sendMoney;
    private javax.swing.JLabel txt;
    // End of variables declaration//GEN-END:variables
}
